{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","services/users.js","components/Users.js","services/blogs.js","services/login.js","reducers/successNotificationReducer.js","reducers/errorNotificationReducer.js","App.js","store.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","closingButtonLabel","displayName","Blog","blog","user","deleteBlog","onLike","console","log","blogRef","useRef","handleDeleteButton","event","a","window","confirm","title","author","id","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","url","likes","name","username","_id","connectedNotification","connect","state","successNotification","errorNotification","text","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","value","onChange","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","addBlog","preventDefault","target","axios","get","then","response","data","Users","users","setUsers","useEffect","userService","map","key","blogs","length","token","getAll","create","newObject","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","login","credentials","removeSuccessNotification","dispatch","successNotificationReducer","action","clearTimeout","timer","removeErrorNotification","errorNotificationReducer","mapDispatchToProps","setSuccessNotification","showTime","setTimeout","setErrorNotification","connectedApp","blogFormRef","setBlogs","setUsername","setPassword","setUser","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","blogObject","current","returnedBlog","concat","catch","handleLogin","loginService","setItem","stringify","handleLogOut","removeItem","b","blogsAfterRemove","filter","to","path","sort","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wRAGMA,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAU,IAAD,EACpBC,oBAAS,GADW,mBAC3CC,EAD2C,KAClCC,EADkC,KAE5CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBR,GAAK,WACvB,MAAM,CACJO,uBAKF,6BACE,yBAAKE,MAAOL,GACV,4BAAQM,QAASH,GAAmBR,EAAMY,cAE5C,yBAAKF,MAAOH,GACTP,EAAMa,SACP,4BAAQF,QAASH,GAAmBR,EAAMc,yBAMlDjB,EAAUkB,YAAc,YAMTlB,QCkBAmB,EApDF,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACtCC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIL,GAEZ,IAAMM,EAAUC,mBAUVC,EAAkB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACHC,OAAOC,QAAQ,mCAAqCZ,EAAKa,MAAQ,OAASb,EAAKc,SAGnGZ,EAAWF,EAAKe,IAJO,2CAAH,sDAoBxB,OACE,yBAAKtB,MA7BW,CAChBuB,WAAY,GACZC,YAAa,EACbC,OAAQ,QACRC,YAAa,EACbC,aAAc,IA0BZ,yBAAKL,GAAG,mBAAmBM,UAAU,yBAClCrB,EAAKa,MADR,IACgBb,EAAKc,QAErB,kBAAC,EAAD,CAAWnB,YAAY,OAAOE,mBAAmB,OAAOb,IAAKsB,GAC1DN,EAAKsB,IACN,6BAFF,SAGStB,EAAKuB,MAHd,IAGqB,4BAAQF,UAAU,OAAO3B,QAAS,kBAAMS,EAAOH,KAA/C,QACnB,6BACGA,EAAKC,KAAKuB,KACb,mBAxBe,WAEnB,OAAGvB,EAAKwB,WAAazB,EAAKC,KAAKwB,UAAYxB,EAAKyB,MAAQ1B,EAAKC,KAEzD,4BAAQP,QAASc,GAAjB,UAGO,OAiBP,SChBOmB,EAFeC,aAPN,SAACC,GACvB,MAAO,CACLC,oBAAqBD,EAAMC,oBAC3BC,kBAAmBF,EAAME,qBAICH,EA5BF,SAAC7C,GAE3B,OAA+B,OAA5BA,EAAMgD,kBAEL,yBAAKV,UAAU,SACZtC,EAAMgD,kBAAkBC,MAIE,OAA9BjD,EAAM+C,oBAEL,yBAAKT,UAAU,WACZtC,EAAM+C,oBAAoBE,MAK/B,QC0BWC,EA3CG,SAAC,GAMZ,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,qBACAX,EAEI,EAFJA,SACAY,EACI,EADJA,SAEA,OACE,6BACE,qCAEA,0BAAMC,SAAUJ,GACd,wCAEE,2BACEnB,GAAG,WACHwB,MAAOd,EACPe,SAAUL,KAGd,wCAEE,2BACEpB,GAAG,WACH0B,KAAK,WACLF,MAAOF,EACPG,SAAUJ,KAGd,4BAAQrB,GAAG,eAAe0B,KAAK,UAA/B,YCiBOC,EA/CC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEF1D,mBAAS,IAFP,mBAE3B2D,EAF2B,KAEjBC,EAFiB,OAGA5D,mBAAS,IAHT,mBAG3B6D,EAH2B,KAGhBC,EAHgB,OAIN9D,mBAAS,IAJH,mBAI3B+D,EAJ2B,KAInBC,EAJmB,KAkB5BC,EAAO,uCAAG,WAAOzC,GAAP,SAAAC,EAAA,sDACdD,EAAM0C,iBACNR,EAAW,CACT9B,MAAO+B,EACP9B,OAAQgC,EACRxB,IAAK0B,IAEPH,EAAY,IACZE,EAAa,IACbE,EAAU,IATI,2CAAH,sDAYb,OACE,0BAAMX,SAAUY,GACd,uCACa,2BAAOnC,GAAG,QAAQwB,MAAOK,EAAUJ,SA3B1B,SAAC/B,GACzBoC,EAAYpC,EAAM2C,OAAOb,WA4BvB,wCACc,2BAAOxB,GAAG,SAASwB,MAAOO,EAAWN,SA1B5B,SAAC/B,GAC1BsC,EAAatC,EAAM2C,OAAOb,WA2BxB,qCACW,2BAAOxB,GAAG,MAAMwB,MAAOS,EAAQR,SAzBtB,SAAC/B,GACvBwC,EAAUxC,EAAM2C,OAAOb,WA0BrB,4BAAQxB,GAAG,gBAAgB0B,KAAK,UAAhC,Y,iBCnCS,EALA,WAEX,OADgBY,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC6B9BC,EA/BD,WAAO,IAAD,EACUzE,mBAAS,IADnB,mBACT0E,EADS,KACFC,EADE,KAShB,OANAC,qBAAU,WACNC,IAAqBP,MAAK,SAAAI,GAAK,OAC7BC,EAAUD,QAEX,IAGH,6BACE,qCACA,+BACA,+BACE,4BACE,oCACA,8CAEDA,EAAMI,KAAI,SAAA9D,GAAI,OACf,wBAAI+D,IAAK/D,EAAKc,IACZ,4BAAKd,EAAKuB,MACV,4BAAKvB,EAAKgE,MAAMC,gBCrBxBC,EAAQ,KAgCG,GAAEC,OA1BF,WAEb,OADgBf,IAAMC,IATR,cAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAwBlBY,OArBb,uCAAG,WAAMC,GAAN,iBAAA5D,EAAA,6DACP6D,EAAS,CACbC,QAAS,CAAEC,cAAeN,IAFf,SAKUd,IAAMqB,KAlBf,aAkB6BJ,EAAWC,GALzC,cAKPf,EALO,yBAMNA,EAASC,MANH,2CAAH,sDAqBqBkB,OAZlB,SAAC5D,EAAIuD,GAElB,OADgBjB,IAAMuB,IAAN,UAvBF,aAuBE,YAAwB7D,GAAMuD,GAC/Bf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAUFoB,OAP7B,uCAAG,WAAO9D,GAAP,eAAAL,EAAA,6DACP6D,EAAS,CACbC,QAAS,CAAEC,cAAeN,IAFf,SAIPd,IAAMyB,OAAN,UA/BQ,aA+BR,YAA2B/D,GAAMwD,GAJ1B,2CAAH,sDAOqCQ,SA9BhC,SAAAC,GACfb,EAAK,iBAAaa,KCEL,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAxE,EAAA,sEACW2C,IAAMqB,KAHf,aAG6BQ,GAD/B,cACN1B,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCyBE0B,EAA4B,WACrC,8CAAO,WAAMC,GAAN,SAAA1E,EAAA,sDACH0E,EAAS,CACL3C,KAAM,wBAFP,2CAAP,mDAAM,IAOK4C,EApCoB,WAA2B,IAA1BxD,EAAyB,uDAAjB,KAAMyD,EAAW,uCACzD,OAAOA,EAAO7C,MACV,IAAK,2BAID,OAHa,OAAVZ,GACC0D,aAAa1D,EAAM2D,OAEhBF,EAAO7B,KAElB,IAAK,sBACD,OAAO,KACX,QACI,OAAO5B,ICgBN4D,EAA0B,WACnC,8CAAO,WAAML,GAAN,SAAA1E,EAAA,sDACH0E,EAAS,CACL3C,KAAM,wBAFP,2CAAP,mDAAM,IAOKiD,EAnCkB,WAA2B,IAA1B7D,EAAyB,uDAAjB,KAAMyD,EAAW,uCACvD,OAAOA,EAAO7C,MACV,IAAK,yBAID,OAHa,OAAVZ,GACC0D,aAAa1D,EAAM2D,OAEhBF,EAAO7B,KAClB,IAAK,sBACD,OAAO,KACX,QACI,OAAO5B,I,eCsLb8D,EAAqB,CACzBC,uBFnLoC,SAAC5D,EAAM6D,GACzC,8CAAO,WAAMT,GAAN,SAAA1E,EAAA,sDACH0E,EAAS,CACL3C,KAAM,2BACNgB,KAAM,CACFzB,OACAwD,MAAOM,YAAW,WACdV,EAASD,OACVU,MAPR,2CAAP,mDAAM,IEmLRE,qBDrLkC,SAAC/D,EAAM6D,GACvC,8CAAO,WAAMT,GAAN,SAAA1E,EAAA,sDACH0E,EAAS,CACL3C,KAAM,yBACNgB,KAAM,CACFzB,OACAwD,MAAOM,YAAW,WACdV,EAASK,OACVI,MAPR,2CAAP,mDAAM,KCyLKG,EAFMpE,aAZG,SAACC,GACvB,MAAO,CACLC,oBAAqBD,EAAMC,oBAC3BC,kBAAmBF,EAAME,qBASiB4D,EAAzB/D,EAnLF,SAAC7C,GAClB,IAAMkH,EAAc1F,mBADQ,EAEFtB,mBAAS,IAFP,mBAErBgF,EAFqB,KAEdiC,EAFc,OAGIjH,mBAAS,IAHb,mBAGrBwC,EAHqB,KAGX0E,EAHW,OAIIlH,mBAAS,IAJb,mBAIrBoD,EAJqB,KAIX+D,EAJW,OAKJnH,mBAAS,MALL,mBAKrBgB,EALqB,KAKfoG,EALe,KAQ5BxC,qBAAU,WACRyC,EAAYlC,SAASb,MAAK,SAAAU,GAAK,OAC7BiC,EAAUjC,QAEX,IAEHJ,qBAAU,WACR,IAAM0C,EAAiB5F,OAAO6F,aAAaC,QAAQ,qBACnD,GAAIF,EAAgB,CAClB,IAAMtG,EAAOyG,KAAKC,MAAMJ,GACxBF,EAAQpG,GACRqG,EAAYvB,SAAS9E,EAAKkE,UAE3B,IAEH,IAAMjB,EAAU,SAAC0D,GACfX,EAAYY,QAAQtH,mBACpB+G,EACGjC,OAAOuC,GACPrD,MAAK,SAAAuD,GACJZ,EAASjC,EAAM8C,OAAOD,IACtB/H,EAAM6G,uBAAuB,mBAAqBkB,EAAajG,MAAQ,OAASiG,EAAahG,OAAQ,QAEtGkG,MAAQ,WACPjI,EAAMgH,qBAAqB,uBAAwB,OAInDkB,EAAW,uCAAG,WAAOxG,GAAP,eAAAC,EAAA,6DAClBD,EAAM0C,iBACN/C,QAAQC,IAAI,mBAAoBoB,EAAUY,GAFxB,kBAKG6E,EAAajC,MAAM,CACpCxD,WAAUY,aANI,OAKVpC,EALU,OAShBU,OAAO6F,aAAaW,QAClB,oBAAqBT,KAAKU,UAAUnH,IAGtCqG,EAAYvB,SAAS9E,EAAKkE,OAC1BkC,EAAQpG,GACRkG,EAAY,IACZC,EAAY,IAhBI,kDAkBhBrH,EAAMgH,qBAAqB,6BAA8B,KAlBzC,0DAAH,sDAsBXsB,EAAY,uCAAG,WAAO5G,GAAP,SAAAC,EAAA,sDACnBC,OAAO6F,aAAac,WAAW,qBAC/BjB,EAAQ,MAFW,2CAAH,sDAmCZlG,EAAM,uCAAG,WAAOH,GAAP,eAAAU,EAAA,6DAEPkG,EAFO,eAGR5G,EAHQ,CAIXuB,MAAOvB,EAAKuB,MAAM,EAClBtB,KAAMD,EAAKC,KAAKc,KAGlBX,QAAQC,IAAIJ,GACZG,QAAQC,IAAIL,EAAKC,KAAKc,IACtBX,QAAQC,IAAIL,EAAKe,GAAI6F,GAVR,SAYPN,EAAY3B,OAAO3E,EAAKe,GAAI6F,GAZrB,OAabV,EAASjC,EAAMF,KAAI,SAAAwD,GAAC,OAAIA,EAAExG,KAAOf,EAAKe,GAAK6F,EAAYW,MAb1C,2CAAH,sDA0CNrH,EAAU,uCAAG,WAAOa,GAAP,eAAAL,EAAA,sEACX4F,EAAYzB,OAAO9D,GADR,OAEXyG,EAAmBvD,EAAMwD,QAAO,SAAAF,GAAC,OAAIA,EAAExG,KAAOA,KACpDmF,EAASsB,GACTzI,EAAM6G,uBAAuB,gBAAiB,KAJ7B,2CAAH,sDAShB,OACE,6BACE,kBAAC,EAAD,MACU,OAAT3F,GAnFH,6BACE,kBAAC,EAAD,CACEwB,SAAUA,EACVY,SAAUA,EACVF,qBAAsB,gBAAGiB,EAAH,EAAGA,OAAH,OAAgB+C,EAAY/C,EAAOb,QACzDH,qBAAsB,gBAAGgB,EAAH,EAAGA,OAAH,OAAgBgD,EAAYhD,EAAOb,QACzDL,aAAc+E,KA8EN,OAAThH,GAzBH,6BACE,2BAAIA,EAAKuB,KAAT,eACA,4BAAQiB,KAAK,SAAS/C,QAAS2H,GAA/B,WAwBU,OAATpH,GAxED,6BACE,kBAAC,IAAD,CAAMyH,GAAG,UAAT,UAyEF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,UACA,OAAT1H,GAvBT,6BACE,kBAAC,EAAD,QAwBE,kBAAC,IAAD,CAAO0H,KAAK,KACZ,qCACY,OAAT1H,GAxEP,6BACE,kBAAC,EAAD,CAAWN,YAAY,WAAWE,mBAAmB,SAASb,IAAKiH,GAEjE,kBAAC,EAAD,CAAUtD,WAAcO,MAsEZ,OAATjD,IA/CPgE,EAAM2D,MAAK,SAAClH,EAAG6G,GAAJ,OAAUA,EAAEhG,MAAMb,EAAEa,SAG7B,6BACG0C,EAAMF,KAAI,SAAA/D,GAAI,OACb,kBAAC,EAAD,CAAMgE,IAAKhE,EAAKe,GAAIf,KAAMA,EAAMC,KAAMA,EAAMC,WAAYA,EAAYC,OAAQA,EAAQkB,UAAU,oB,wBChIlGwG,EAAUC,0BAAgB,CAC9BhG,oBAAqBuD,EACrBtD,kBAAmB2D,IAUNqC,EAPDC,sBACZH,EACAI,8BACEC,0BAAgBC,OCJpBC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.ce4fc850.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref)  => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return{\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>{props.closingButtonLabel}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useRef } from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog, user, deleteBlog, onLike }) => {\r\n  console.log(user)\r\n  console.log(blog)\r\n\r\n  const blogRef = useRef()\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const handleDeleteButton = async (event) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete \" + blog.title + \" by \" + blog.author)\r\n\r\n    if(confirmDelete){\r\n      deleteBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  const DeleteButton = () => {\r\n    //Why can't I access user id?\r\n    if(user.username === blog.user.username || user._id === blog.user){\r\n      return(\r\n        <button onClick={handleDeleteButton}>delete</button>\r\n      )\r\n    } else {\r\n      return ( null )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n\r\n      <div id=\"title-and-author\" className=\"visibleWhenNotToggled\">\r\n        {blog.title} {blog.author}\r\n      </div>\r\n      <Togglable buttonLabel=\"view\" closingButtonLabel=\"hide\" ref={blogRef} >\r\n        {blog.url}\r\n        <br></br>\r\n        likes {blog.likes} <button className=\"like\" onClick={() => onLike(blog)}>like</button>\r\n        <br></br>\r\n          {blog.user.name}\r\n        <DeleteButton />\r\n      </Togglable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const Notification = (props) => {\n\n  if(props.errorNotification !== null){\n    return (  \n      <div className=\"error\">\n        {props.errorNotification.text}\n      </div>\n    )\n  }\n  if(props.successNotification !== null){\n    return (   \n      <div className=\"success\">\n        {props.successNotification.text}\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    successNotification: state.successNotification,\n    errorNotification: state.errorNotification\n  }\n}\n\nconst connectedNotification = connect(mapStateToProps)(Notification)\n\nexport default connectedNotification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id='username'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id='password'\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm =({ createBlog }) => {\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    })\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n            Title: <input id=\"title\" value={newTitle} onChange={handleTitleChange} />\n      </div>\n      <div>\n            Author: <input id=\"author\" value={newAuthor} onChange={handleAuthorChange} />\n      </div>\n      <div>\n            Url: <input id=\"url\" value={newUrl} onChange={handleUrlChange} />\n      </div>\n      <button id=\"create-button\" type=\"submit\">create</button>\n    </form>\n  )\n\n}\n\nexport default BlogForm\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getAll }","import React, { useState, useEffect } from 'react'\nimport userService from '../services/users'\n\nconst Users = () => {\n    const [users, setUsers] = useState([])\n\n    useEffect(() => {\n        userService.getAll().then(users =>\n          setUsers( users )\n        )\n      }, [])\n\n    return (\n      <div>\n        <h1>Users</h1>\n        <table>\n        <tbody>\n          <tr>\n            <th>Name</th>\n            <th>Blogs created</th>\n          </tr>\n          {users.map(user =>\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.blogs.length}</td>\n          </tr>\n          )}\n        </tbody>\n        </table>\n      </div>\n\n    )\n}\n\nexport default Users","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","const successNotificationReducer = (state = null, action) => {\n    switch(action.type){\n        case 'SET_SUCCESS_NOTIFICATION':\n            if(state !== null){\n                clearTimeout(state.timer)\n            }\n            return action.data\n\n        case 'REMOVE_NOTIFICATION':\n            return null\n        default:\n            return state\n    }\n}\nexport const setSuccessNotification = (text, showTime) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SET_SUCCESS_NOTIFICATION',\n            data: {\n                text,\n                timer: setTimeout(() => {\n                    dispatch(removeSuccessNotification())\n                }, showTime)\n            }\n        })\n    }\n}\n\nexport const removeSuccessNotification = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'REMOVE_NOTIFICATION'\n        })\n    }\n}\n\nexport default successNotificationReducer","const errorNotificationReducer = (state = null, action) => {\n    switch(action.type){\n        case 'SET_ERROR_NOTIFICATION':\n            if(state !== null){\n                clearTimeout(state.timer)\n            }\n            return action.data           \n        case 'REMOVE_NOTIFICATION':\n            return null\n        default:\n            return state\n    }\n}\nexport const setErrorNotification = (text, showTime) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SET_ERROR_NOTIFICATION',\n            data: {\n                text,\n                timer: setTimeout(() => {\n                    dispatch(removeErrorNotification())\n                }, showTime)\n            }\n        })\n    }\n}\n\nexport const removeErrorNotification = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'REMOVE_NOTIFICATION'\n        })\n    }\n}\n\nexport default errorNotificationReducer","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Users from './components/Users'\nimport Togglable from \"./components/Togglable\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport { connect } from 'react-redux'\nimport { setSuccessNotification } from './reducers/successNotificationReducer'\nimport { setErrorNotification } from './reducers/errorNotificationReducer'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\n\nexport const App = (props) => {\n  const blogFormRef = useRef()\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        props.setSuccessNotification('New blog added: ' + returnedBlog.title + ' by ' + returnedBlog.author, 5000)\n      })\n      .catch = () => {\n        props.setErrorNotification('something went wrong', 5000)\n      }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with ', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      props.setErrorNotification('wrong username or password', 5000)\n    }\n  }\n\n  const handleLogOut = async (event) => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n  }\n\n  const loginForm = () => (\n    <div>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </div>\n  )\n\n  const menu = () => {\n    return (\n      <div>\n        <Link to=\"/users\">users</Link>\n      </div>\n    )\n  }\n\n  const blogForm = () => (\n\n    <div>\n      <Togglable buttonLabel=\"add blog\" closingButtonLabel=\"cancel\" ref={blogFormRef}>\n\n        <BlogForm createBlog = {addBlog} />\n      </Togglable>\n    </div>\n  )\n\n  const onLike = async (blog) => {\n\n    const blogObject = {\n      ...blog,\n      likes: blog.likes+1,\n      user: blog.user.id\n    }\n\n    console.log(user)\n    console.log(blog.user.id)\n    console.log(blog.id, blogObject)\n\n    await blogService.update(blog.id, blogObject)\n    setBlogs(blogs.map(b => b.id !== blog.id ? blogObject: b))\n  }\n\n  const bloglist = () => {\n\n    blogs.sort((a, b) => b.likes-a.likes)\n\n    return(\n      <div>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} user={user} deleteBlog={deleteBlog} onLike={onLike} className=\"blog\" />\n        )}\n      </div>\n    )\n  }\n\n  const loggedIn = () => (\n    <div>\n      <p>{user.name} logged in </p>\n      <button type=\"submit\" onClick={handleLogOut}>logout</button>\n    </div>\n  )\n\n  const users = () => (\n    <div>\n      <Users />\n    </div>\n  )\n\n  const deleteBlog = async (id) => {\n    await blogService.remove(id)\n    const blogsAfterRemove = blogs.filter(b => b.id !== id)\n    setBlogs(blogsAfterRemove)\n    props.setSuccessNotification('Blog deleted!', 5000)\n\n  }\n\n\n  return (\n    <div>\n      <Notification />\n      {user === null && loginForm()}\n      {user !== null && loggedIn()}\n      {user !== null && menu()}\n\n      <Switch>\n          <Route path=\"/users\">\n            {user !== null && users()}\n          </Route>\n        <Route path=\"/\">\n        <h2>blogs</h2>\n          {user !== null && blogForm()}\n          {user !== null && bloglist()}\n        </Route>\n      </Switch>\n\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    successNotification: state.successNotification,\n    errorNotification: state.errorNotification\n  }\n}\n\nconst mapDispatchToProps = {\n  setSuccessNotification,\n  setErrorNotification\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default connectedApp","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport errorNotificationReducer from './reducers/errorNotificationReducer'\nimport successNotificationReducer from './reducers/successNotificationReducer'\n\nconst reducer = combineReducers({\n  successNotification: successNotificationReducer,\n  errorNotification: errorNotificationReducer,\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport store from './store.js'\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}