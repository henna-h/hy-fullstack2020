{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","closingButtonLabel","displayName","Blog","blog","user","deleteBlog","onLike","console","log","username","blogRef","useRef","handleDeleteButton","event","a","window","confirm","title","author","id","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","url","likes","name","_id","Notification","errorMessage","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","value","onChange","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","addBlog","preventDefault","target","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","login","credentials","App","blogFormRef","blogs","setBlogs","setUsername","setPassword","setUser","setErrorMessage","setMessage","useEffect","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","blogObject","current","returnedBlog","concat","setTimeout","catch","handleLogin","loginService","setItem","stringify","handleLogOut","removeItem","map","b","blogsAfterRemove","filter","sort","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a08a131.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref)  => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return{\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>{props.closingButtonLabel}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useRef } from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog, user, deleteBlog, onLike }) => {\r\n  console.log(user)\r\n  console.log(blog.user.username)\r\n\r\n  const blogRef = useRef()\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const handleDeleteButton = async (event) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete \" + blog.title + \" by \" + blog.author)\r\n\r\n    if(confirmDelete){\r\n      deleteBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  const DeleteButton = () => {\r\n    //Why can't I access user id?\r\n    if(user.username === blog.user.username || user._id === blog.user){\r\n      return(\r\n        <button onClick={handleDeleteButton}>delete</button>\r\n      )\r\n    } else {\r\n      return ( null )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n\r\n      <div id=\"title-and-author\" className=\"visibleWhenNotToggled\">\r\n        {blog.title} {blog.author}\r\n      </div>\r\n      <Togglable buttonLabel=\"view\" closingButtonLabel=\"hide\" ref={blogRef} >\r\n        {blog.url}\r\n        <br></br>\r\n        likes {blog.likes} <button className=\"like\" onClick={() => onLike(blog)}>like</button>\r\n        <br></br>\r\n        {blog.user.name}\r\n        <DeleteButton />\r\n      </Togglable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nconst Notification = ({ errorMessage, message }) => {\n\n  if(errorMessage !== null){\n    return (  \n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n  if(message !== null){\n    return (   \n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id='username'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id='password'\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm =({ createBlog }) => {\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    })\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n            Title: <input id=\"title\" value={newTitle} onChange={handleTitleChange} />\n      </div>\n      <div>\n            Author: <input id=\"author\" value={newAuthor} onChange={handleAuthorChange} />\n      </div>\n      <div>\n            Url: <input id=\"url\" value={newUrl} onChange={handleUrlChange} />\n      </div>\n      <button id=\"create-button\" type=\"submit\">create</button>\n    </form>\n  )\n\n}\n\nexport default BlogForm\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from \"./components/Togglable\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const blogFormRef = useRef()\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [message, setMessage] = useState(null)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setMessage('New blog added: ' + returnedBlog.title + ' by ' + returnedBlog.author)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch = () => {\n        setErrorMessage('something went wrong')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with ', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogOut = async (event) => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n  }\n\n  const loginForm = () => (\n    <div>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </div>\n  )\n\n  const blogForm = () => (\n\n    <div>\n      <Togglable buttonLabel=\"add blog\" closingButtonLabel=\"cancel\" ref={blogFormRef}>\n\n        <BlogForm createBlog = {addBlog} />\n      </Togglable>\n    </div>\n  )\n\n  const onLike = (blog) => {\n\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      user: blog.user,\n      likes: blog.likes+1\n    }\n\n    console.log(blog.id, blogObject)\n\n    blogService\n      .update(blog.id, blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(b => b.id !== blog.id ? b : returnedBlog))\n      })\n  }\n\n  const bloglist = () => {\n\n    blogs.sort((a, b) => b.likes-a.likes)\n\n    return(\n      <div>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} user={user} deleteBlog={deleteBlog} onLike={onLike} className=\"blog\" />\n        )}\n      </div>\n    )\n  }\n\n  const loggedIn = () => (\n    <div>\n      <p>{user.name} logged in </p>\n      <button type=\"submit\" onClick={handleLogOut}>logout</button>\n    </div>\n  )\n\n  const deleteBlog = async (id) => {\n    await blogService.remove(id)\n    const blogsAfterRemove = blogs.filter(b => b.id !== id)\n    setBlogs(blogsAfterRemove)\n    setMessage(\"Blog deleted!\")\n\n  }\n\n\n  return (\n    <div>\n      <Notification message={message} errorMessage={errorMessage}/>\n\n      <h2>blogs</h2>\n      {user !== null && loggedIn()}\n      {user !== null && blogForm()}\n\n      {user === null && loginForm()}\n      {user !== null && bloglist()}\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}