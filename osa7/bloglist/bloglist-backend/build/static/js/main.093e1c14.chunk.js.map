{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","services/blogs.js","services/login.js","reducers/successNotificationReducer.js","reducers/errorNotificationReducer.js","App.js","store.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","closingButtonLabel","displayName","Blog","blog","user","deleteBlog","onLike","console","log","username","blogRef","useRef","handleDeleteButton","event","a","window","confirm","title","author","id","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","url","likes","name","_id","connectedNotification","connect","state","successNotification","errorNotification","text","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","value","onChange","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","addBlog","preventDefault","target","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","login","credentials","removeSuccessNotification","dispatch","successNotificationReducer","action","clearTimeout","timer","removeErrorNotification","errorNotificationReducer","mapDispatchToProps","setSuccessNotification","showTime","setTimeout","setErrorNotification","connectedApp","blogFormRef","blogs","setBlogs","setUsername","setPassword","setUser","useEffect","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","blogObject","current","returnedBlog","concat","catch","handleLogin","loginService","setItem","stringify","handleLogOut","removeItem","map","b","blogsAfterRemove","filter","sort","key","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.093e1c14.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref)  => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return{\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>{props.closingButtonLabel}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useRef } from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog, user, deleteBlog, onLike }) => {\r\n  console.log(user)\r\n  console.log(blog.user.username)\r\n\r\n  const blogRef = useRef()\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const handleDeleteButton = async (event) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete \" + blog.title + \" by \" + blog.author)\r\n\r\n    if(confirmDelete){\r\n      deleteBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  const DeleteButton = () => {\r\n    //Why can't I access user id?\r\n    if(user.username === blog.user.username || user._id === blog.user){\r\n      return(\r\n        <button onClick={handleDeleteButton}>delete</button>\r\n      )\r\n    } else {\r\n      return ( null )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n\r\n      <div id=\"title-and-author\" className=\"visibleWhenNotToggled\">\r\n        {blog.title} {blog.author}\r\n      </div>\r\n      <Togglable buttonLabel=\"view\" closingButtonLabel=\"hide\" ref={blogRef} >\r\n        {blog.url}\r\n        <br></br>\r\n        likes {blog.likes} <button className=\"like\" onClick={() => onLike(blog)}>like</button>\r\n        <br></br>\r\n        {blog.user.name}\r\n        <DeleteButton />\r\n      </Togglable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const Notification = (props) => {\n\n  if(props.errorNotification !== null){\n    return (  \n      <div className=\"error\">\n        {props.errorNotification.text}\n      </div>\n    )\n  }\n  if(props.successNotification !== null){\n    return (   \n      <div className=\"success\">\n        {props.successNotification.text}\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    successNotification: state.successNotification,\n    errorNotification: state.errorNotification\n  }\n}\n\nconst connectedNotification = connect(mapStateToProps)(Notification)\n\nexport default connectedNotification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id='username'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id='password'\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm =({ createBlog }) => {\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    })\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n            Title: <input id=\"title\" value={newTitle} onChange={handleTitleChange} />\n      </div>\n      <div>\n            Author: <input id=\"author\" value={newAuthor} onChange={handleAuthorChange} />\n      </div>\n      <div>\n            Url: <input id=\"url\" value={newUrl} onChange={handleUrlChange} />\n      </div>\n      <button id=\"create-button\" type=\"submit\">create</button>\n    </form>\n  )\n\n}\n\nexport default BlogForm\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","const successNotificationReducer = (state = null, action) => {\n    switch(action.type){\n        case 'SET_SUCCESS_NOTIFICATION':\n            if(state !== null){\n                clearTimeout(state.timer)\n            }\n            return action.data\n\n        case 'REMOVE_NOTIFICATION':\n            return null\n        default:\n            return state\n    }\n}\nexport const setSuccessNotification = (text, showTime) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SET_SUCCESS_NOTIFICATION',\n            data: {\n                text,\n                timer: setTimeout(() => {\n                    dispatch(removeSuccessNotification())\n                }, showTime)\n            }\n        })\n    }\n}\n\nexport const removeSuccessNotification = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'REMOVE_NOTIFICATION'\n        })\n    }\n}\n\nexport default successNotificationReducer","const errorNotificationReducer = (state = null, action) => {\n    switch(action.type){\n        case 'SET_ERROR_NOTIFICATION':\n            if(state !== null){\n                clearTimeout(state.timer)\n            }\n            return action.data           \n        case 'REMOVE_NOTIFICATION':\n            return null\n        default:\n            return state\n    }\n}\nexport const setErrorNotification = (text, showTime) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SET_ERROR_NOTIFICATION',\n            data: {\n                text,\n                timer: setTimeout(() => {\n                    dispatch(removeErrorNotification())\n                }, showTime)\n            }\n        })\n    }\n}\n\nexport const removeErrorNotification = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'REMOVE_NOTIFICATION'\n        })\n    }\n}\n\nexport default errorNotificationReducer","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from \"./components/Togglable\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport { connect } from 'react-redux'\nimport { setSuccessNotification } from './reducers/successNotificationReducer'\nimport { setErrorNotification } from './reducers/errorNotificationReducer'\n\n\nexport const App = (props) => {\n  const blogFormRef = useRef()\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        props.setSuccessNotification('New blog added: ' + returnedBlog.title + ' by ' + returnedBlog.author, 5000)\n      })\n      .catch = () => {\n        props.setErrorNotification('something went wrong', 5000)\n      }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with ', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      props.setErrorNotification('wrong username or password', 5000)\n    }\n  }\n\n  const handleLogOut = async (event) => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n  }\n\n  const loginForm = () => (\n    <div>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </div>\n  )\n\n  const blogForm = () => (\n\n    <div>\n      <Togglable buttonLabel=\"add blog\" closingButtonLabel=\"cancel\" ref={blogFormRef}>\n\n        <BlogForm createBlog = {addBlog} />\n      </Togglable>\n    </div>\n  )\n\n  const onLike = (blog) => {\n\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      user: blog.user,\n      likes: blog.likes+1\n    }\n\n    console.log(blog.id, blogObject)\n\n    blogService\n      .update(blog.id, blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(b => b.id !== blog.id ? b : returnedBlog))\n      })\n  }\n\n  const bloglist = () => {\n\n    blogs.sort((a, b) => b.likes-a.likes)\n\n    return(\n      <div>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} user={user} deleteBlog={deleteBlog} onLike={onLike} className=\"blog\" />\n        )}\n      </div>\n    )\n  }\n\n  const loggedIn = () => (\n    <div>\n      <p>{user.name} logged in </p>\n      <button type=\"submit\" onClick={handleLogOut}>logout</button>\n    </div>\n  )\n\n  const deleteBlog = async (id) => {\n    await blogService.remove(id)\n    const blogsAfterRemove = blogs.filter(b => b.id !== id)\n    setBlogs(blogsAfterRemove)\n    props.setSuccessNotification('Blog deleted!', 5000)\n\n  }\n\n\n  return (\n    <div>\n      <Notification />\n\n      <h2>blogs</h2>\n      {user !== null && loggedIn()}\n      {user !== null && blogForm()}\n\n      {user === null && loginForm()}\n      {user !== null && bloglist()}\n\n    </div>\n  )\n}\n\n    //WHEN YOU WAKE UP ADD PROPS STUFF HERE!!!\n\n  const mapStateToProps = (state) => {\n    return {\n      successNotification: state.successNotification,\n      errorNotification: state.errorNotification\n    }\n  }\n\n  const mapDispatchToProps = {\n    setSuccessNotification,\n    setErrorNotification\n  }\n\n  const connectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default connectedApp","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport errorNotificationReducer from './reducers/errorNotificationReducer'\nimport successNotificationReducer from './reducers/successNotificationReducer'\n\nconst reducer = combineReducers({\n  successNotification: successNotificationReducer,\n  errorNotification: errorNotificationReducer,\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport store from './store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}