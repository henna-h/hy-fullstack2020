{"version":3,"sources":["components/Blog.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","Notification","errorMessage","message","className","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","username","setUsername","password","setPassword","user","setUser","setErrorMessage","setMessage","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","event","preventDefault","blogObject","url","returnedBlog","concat","setTimeout","catch","handleLogin","console","log","loginService","setItem","stringify","handleLogOut","removeItem","handleTitleChange","target","value","handleAuthorChange","handleUrlChange","name","type","onClick","onSubmit","onChange","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b714e81e.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nconst Notification = ({ errorMessage, message }) => {\n\n  if(errorMessage !== null){\n    return (  \n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n  if(message !== null){\n    return (   \n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login' \n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n        setMessage('New blog added: ' + returnedBlog.title + ' by ' + returnedBlog.author)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch = () => {\n        setErrorMessage('something went wrong')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogOut = async (event) => {\n    //event.preventDefault()\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n  }\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <div>\n        Title: <input value={newTitle} onChange={handleTitleChange} />\n      </div>\n      <div>\n        Author: <input value={newAuthor} onChange={handleAuthorChange} />\n      </div>\n      <div>\n        Url: <input value={newUrl} onChange={handleUrlChange} />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>  \n  )\n\n  const bloglist = () => (\n    <div>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} className=\"blog\" />\n      )}\n    </div>\n  )\n\n  const loggedIn = () => (\n    <div>\n      <p>{user.name} logged in </p>\n      <button type=\"submit\" onClick={handleLogOut}>logout</button>\n    </div>\n  )\n\n\n  return (\n    <div>\n      <Notification message={message} errorMessage={errorMessage}/>\n\n      <h2>blogs</h2>\n      {user !== null && loggedIn()}\n      {user !== null && blogForm()}\n\n      {user === null && loginForm()}\n      {user !== null && bloglist()}\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}