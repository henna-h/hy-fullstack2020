{"version":3,"sources":["components/Togglable.js","services/blogs.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","closingButtonLabel","displayName","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","Blog","blog","user","deleteBlog","console","log","blogRef","useRef","blogs","setBlogs","handleDeleteButton","event","window","confirm","title","author","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","url","likes","blogObject","blogService","returnedBlog","concat","location","reload","name","username","Notification","errorMessage","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","value","onChange","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","addBlog","preventDefault","target","login","credentials","App","blogFormRef","setUsername","setPassword","setUser","setErrorMessage","setMessage","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","current","setTimeout","catch","handleLogin","loginService","setItem","stringify","handleLogOut","removeItem","blogsAfterRemove","filter","b","sort","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b2c6569.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref)  => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return{\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>{props.closingButtonLabel}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, setToken }","import React, { useState, useRef } from 'react'\r\nimport Togglable from './Togglable'\r\nimport blogService from '../services/blogs'\r\n\r\nconst Blog = ({ blog, user, deleteBlog }) => {\r\n  console.log(user)\r\n  console.log(blog)\r\n  const blogRef = useRef()\r\n  const [blogs, setBlogs] = useState([])\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n\r\n  const like = () => {\r\n    const blogObject = {\r\n      user: blog.user.id,\r\n      likes: blog.likes+1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url\r\n    }\r\n    console.log(blog.id, blog)\r\n\r\n    blogService\r\n      .update(blog.id, blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n      })\r\n\r\n    window.location.reload(false)\r\n\r\n  }\r\n\r\n  const handleDeleteButton = async (event) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete \" + blog.title + \" by \" + blog.author)\r\n\r\n    if(confirmDelete){\r\n      deleteBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  const DeleteButton = () => {\r\n    //Why can't I access user id?\r\n    if(user.username === blog.user.username){\r\n      return(\r\n        <button onClick={handleDeleteButton}>delete</button>\r\n      )\r\n    } else {\r\n      return ( null )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div className=\"visibleWhenNotToggled\">\r\n        {blog.title} {blog.author}\r\n      </div>\r\n      <Togglable buttonLabel=\"view\" closingButtonLabel=\"hide\" ref={blogRef} >\r\n        {blog.url}\r\n        <br></br>\r\n        likes {blog.likes} <button className=\"like\" onClick={like}>like</button>\r\n        <br></br>\r\n        {blog.user.name}\r\n        <DeleteButton />\r\n      </Togglable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nconst Notification = ({ errorMessage, message }) => {\n\n  if(errorMessage !== null){\n    return (  \n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n  if(message !== null){\n    return (   \n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm =({ createBlog }) => {\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    })\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n            Title: <input value={newTitle} onChange={handleTitleChange} />\n      </div>\n      <div>\n            Author: <input value={newAuthor} onChange={handleAuthorChange} />\n      </div>\n      <div>\n            Url: <input value={newUrl} onChange={handleUrlChange} />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n  )\n\n}\n\nexport default BlogForm\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from \"./components/Togglable\"\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const blogFormRef = useRef()\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [message, setMessage] = useState(null)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setMessage('New blog added: ' + returnedBlog.title + ' by ' + returnedBlog.author)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch = () => {\n        setErrorMessage('something went wrong')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with ', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogOut = async (event) => {\n    //event.preventDefault()\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n  }\n\n  const loginForm = () => (\n    <div>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </div>\n  )\n\n  const blogForm = () => (\n\n    <div>\n      <Togglable buttonLabel=\"add blog\" closingButtonLabel=\"cancel\" ref={blogFormRef}>\n\n        <BlogForm createBlog = {addBlog} />\n      </Togglable>\n    </div>\n  )\n\n  const bloglist = () => {\n\n    blogs.sort((a, b) => b.likes-a.likes)\n\n    return(\n      <div>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} user={user} deleteBlog={deleteBlog} className=\"blog\" />\n        )}\n      </div>\n    )\n  }\n\n  const loggedIn = () => (\n    <div>\n      <p>{user.name} logged in </p>\n      <button type=\"submit\" onClick={handleLogOut}>logout</button>\n    </div>\n  )\n\n  const deleteBlog = async (id) => {\n    await blogService.remove(id)\n    const blogsAfterRemove = blogs.filter(b => b.id !== id)\n    setBlogs(blogsAfterRemove)\n    setMessage(\"Blog deleted!\")\n\n  }\n\n\n  return (\n    <div>\n      <Notification message={message} errorMessage={errorMessage}/>\n\n      <h2>blogs</h2>\n      {user !== null && loggedIn()}\n      {user !== null && blogForm()}\n\n      {user === null && loginForm()}\n      {user !== null && bloglist()}\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}